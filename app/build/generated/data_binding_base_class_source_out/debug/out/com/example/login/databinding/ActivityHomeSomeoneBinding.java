// Generated by view binder compiler. Do not edit!
package com.example.login.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.login.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeSomeoneBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout RelativeLayout;

  @NonNull
  public final TextView ageSomeone;

  @NonNull
  public final TextView ageTextOther;

  @NonNull
  public final ShapeableImageView avatarSomeone;

  @NonNull
  public final ImageView backgroundSomeone;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayout12;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final ConstraintLayout followersBoxSomeone;

  @NonNull
  public final TextView followersOther;

  @NonNull
  public final TextView followersSomeoneNum;

  @NonNull
  public final ConstraintLayout followingBoxSomeone;

  @NonNull
  public final TextView followingOther;

  @NonNull
  public final TextView followingSomeoneNum;

  @NonNull
  public final TextView genderSomeone;

  @NonNull
  public final TextView genderTextOther;

  @NonNull
  public final ImageFilterView imageFilterView;

  @NonNull
  public final TextView locationSomeone;

  @NonNull
  public final TextView signatureSomeone;

  @NonNull
  public final BottomNavigationView someoneHomeBottomNav;

  @NonNull
  public final ConstraintLayout someoneLocation;

  @NonNull
  public final TextView usernameSomeone;

  private ActivityHomeSomeoneBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout RelativeLayout, @NonNull TextView ageSomeone,
      @NonNull TextView ageTextOther, @NonNull ShapeableImageView avatarSomeone,
      @NonNull ImageView backgroundSomeone, @NonNull ConstraintLayout constraintLayout,
      @NonNull ConstraintLayout constraintLayout12, @NonNull ConstraintLayout constraintLayout2,
      @NonNull ConstraintLayout constraintLayout3, @NonNull ConstraintLayout followersBoxSomeone,
      @NonNull TextView followersOther, @NonNull TextView followersSomeoneNum,
      @NonNull ConstraintLayout followingBoxSomeone, @NonNull TextView followingOther,
      @NonNull TextView followingSomeoneNum, @NonNull TextView genderSomeone,
      @NonNull TextView genderTextOther, @NonNull ImageFilterView imageFilterView,
      @NonNull TextView locationSomeone, @NonNull TextView signatureSomeone,
      @NonNull BottomNavigationView someoneHomeBottomNav, @NonNull ConstraintLayout someoneLocation,
      @NonNull TextView usernameSomeone) {
    this.rootView = rootView;
    this.RelativeLayout = RelativeLayout;
    this.ageSomeone = ageSomeone;
    this.ageTextOther = ageTextOther;
    this.avatarSomeone = avatarSomeone;
    this.backgroundSomeone = backgroundSomeone;
    this.constraintLayout = constraintLayout;
    this.constraintLayout12 = constraintLayout12;
    this.constraintLayout2 = constraintLayout2;
    this.constraintLayout3 = constraintLayout3;
    this.followersBoxSomeone = followersBoxSomeone;
    this.followersOther = followersOther;
    this.followersSomeoneNum = followersSomeoneNum;
    this.followingBoxSomeone = followingBoxSomeone;
    this.followingOther = followingOther;
    this.followingSomeoneNum = followingSomeoneNum;
    this.genderSomeone = genderSomeone;
    this.genderTextOther = genderTextOther;
    this.imageFilterView = imageFilterView;
    this.locationSomeone = locationSomeone;
    this.signatureSomeone = signatureSomeone;
    this.someoneHomeBottomNav = someoneHomeBottomNav;
    this.someoneLocation = someoneLocation;
    this.usernameSomeone = usernameSomeone;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeSomeoneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeSomeoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home_someone, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeSomeoneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout RelativeLayout = (RelativeLayout) rootView;

      id = R.id.age_someone;
      TextView ageSomeone = ViewBindings.findChildViewById(rootView, id);
      if (ageSomeone == null) {
        break missingId;
      }

      id = R.id.age_text_other;
      TextView ageTextOther = ViewBindings.findChildViewById(rootView, id);
      if (ageTextOther == null) {
        break missingId;
      }

      id = R.id.avatar_someone;
      ShapeableImageView avatarSomeone = ViewBindings.findChildViewById(rootView, id);
      if (avatarSomeone == null) {
        break missingId;
      }

      id = R.id.background_someone;
      ImageView backgroundSomeone = ViewBindings.findChildViewById(rootView, id);
      if (backgroundSomeone == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayout12;
      ConstraintLayout constraintLayout12 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout12 == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.followers_box_someone;
      ConstraintLayout followersBoxSomeone = ViewBindings.findChildViewById(rootView, id);
      if (followersBoxSomeone == null) {
        break missingId;
      }

      id = R.id.followers_other;
      TextView followersOther = ViewBindings.findChildViewById(rootView, id);
      if (followersOther == null) {
        break missingId;
      }

      id = R.id.followers_someone_num;
      TextView followersSomeoneNum = ViewBindings.findChildViewById(rootView, id);
      if (followersSomeoneNum == null) {
        break missingId;
      }

      id = R.id.following_box_someone;
      ConstraintLayout followingBoxSomeone = ViewBindings.findChildViewById(rootView, id);
      if (followingBoxSomeone == null) {
        break missingId;
      }

      id = R.id.following_other;
      TextView followingOther = ViewBindings.findChildViewById(rootView, id);
      if (followingOther == null) {
        break missingId;
      }

      id = R.id.following_someone_num;
      TextView followingSomeoneNum = ViewBindings.findChildViewById(rootView, id);
      if (followingSomeoneNum == null) {
        break missingId;
      }

      id = R.id.gender_someone;
      TextView genderSomeone = ViewBindings.findChildViewById(rootView, id);
      if (genderSomeone == null) {
        break missingId;
      }

      id = R.id.gender_text_other;
      TextView genderTextOther = ViewBindings.findChildViewById(rootView, id);
      if (genderTextOther == null) {
        break missingId;
      }

      id = R.id.imageFilterView;
      ImageFilterView imageFilterView = ViewBindings.findChildViewById(rootView, id);
      if (imageFilterView == null) {
        break missingId;
      }

      id = R.id.location_someone;
      TextView locationSomeone = ViewBindings.findChildViewById(rootView, id);
      if (locationSomeone == null) {
        break missingId;
      }

      id = R.id.signature_someone;
      TextView signatureSomeone = ViewBindings.findChildViewById(rootView, id);
      if (signatureSomeone == null) {
        break missingId;
      }

      id = R.id.someone_home_bottom_nav;
      BottomNavigationView someoneHomeBottomNav = ViewBindings.findChildViewById(rootView, id);
      if (someoneHomeBottomNav == null) {
        break missingId;
      }

      id = R.id.someone_location;
      ConstraintLayout someoneLocation = ViewBindings.findChildViewById(rootView, id);
      if (someoneLocation == null) {
        break missingId;
      }

      id = R.id.username_someone;
      TextView usernameSomeone = ViewBindings.findChildViewById(rootView, id);
      if (usernameSomeone == null) {
        break missingId;
      }

      return new ActivityHomeSomeoneBinding((RelativeLayout) rootView, RelativeLayout, ageSomeone,
          ageTextOther, avatarSomeone, backgroundSomeone, constraintLayout, constraintLayout12,
          constraintLayout2, constraintLayout3, followersBoxSomeone, followersOther,
          followersSomeoneNum, followingBoxSomeone, followingOther, followingSomeoneNum,
          genderSomeone, genderTextOther, imageFilterView, locationSomeone, signatureSomeone,
          someoneHomeBottomNav, someoneLocation, usernameSomeone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
