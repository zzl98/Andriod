// Generated by view binder compiler. Do not edit!
package com.example.login.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.login.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchPageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final Button btnSearchGame;

  @NonNull
  public final EditText editTextSearchPageSearcheContent;

  @NonNull
  public final TextView findPosts;

  @NonNull
  public final ConstraintLayout followThisUser;

  @NonNull
  public final RelativeLayout followThisUser1;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final TextView textView9;

  private ActivitySearchPageBinding(@NonNull RelativeLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull Button btnSearchGame,
      @NonNull EditText editTextSearchPageSearcheContent, @NonNull TextView findPosts,
      @NonNull ConstraintLayout followThisUser, @NonNull RelativeLayout followThisUser1,
      @NonNull Button searchButton, @NonNull TextView textView10, @NonNull TextView textView18,
      @NonNull TextView textView3, @NonNull TextView textView7, @NonNull TextView textView8,
      @NonNull TextView textView9) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.btnSearchGame = btnSearchGame;
    this.editTextSearchPageSearcheContent = editTextSearchPageSearcheContent;
    this.findPosts = findPosts;
    this.followThisUser = followThisUser;
    this.followThisUser1 = followThisUser1;
    this.searchButton = searchButton;
    this.textView10 = textView10;
    this.textView18 = textView18;
    this.textView3 = textView3;
    this.textView7 = textView7;
    this.textView8 = textView8;
    this.textView9 = textView9;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.btn_search_game;
      Button btnSearchGame = ViewBindings.findChildViewById(rootView, id);
      if (btnSearchGame == null) {
        break missingId;
      }

      id = R.id.editText_search_page_searcheContent;
      EditText editTextSearchPageSearcheContent = ViewBindings.findChildViewById(rootView, id);
      if (editTextSearchPageSearcheContent == null) {
        break missingId;
      }

      id = R.id.findPosts;
      TextView findPosts = ViewBindings.findChildViewById(rootView, id);
      if (findPosts == null) {
        break missingId;
      }

      id = R.id.follow_this_user;
      ConstraintLayout followThisUser = ViewBindings.findChildViewById(rootView, id);
      if (followThisUser == null) {
        break missingId;
      }

      id = R.id.follow_this_user;
      RelativeLayout followThisUser1 = ViewBindings.findChildViewById(rootView, id);
      if (followThisUser1 == null) {
        break missingId;
      }

      id = R.id.searchButton;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.textView8;
      TextView textView8 = ViewBindings.findChildViewById(rootView, id);
      if (textView8 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      return new ActivitySearchPageBinding((RelativeLayout) rootView, bottomNavigationView,
          btnSearchGame, editTextSearchPageSearcheContent, findPosts, followThisUser,
          followThisUser1, searchButton, textView10, textView18, textView3, textView7, textView8,
          textView9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
