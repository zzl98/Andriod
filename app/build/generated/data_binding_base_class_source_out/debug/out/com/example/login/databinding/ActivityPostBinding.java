// Generated by view binder compiler. Do not edit!
package com.example.login.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.login.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPostBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final FloatingActionButton deletePosts;

  @NonNull
  public final ConstraintLayout followThisUser;

  @NonNull
  public final RelativeLayout followThisUser1;

  @NonNull
  public final FloatingActionButton newPost;

  @NonNull
  public final TextView noPostFound;

  @NonNull
  public final RecyclerView rvPosts;

  private ActivityPostBinding(@NonNull RelativeLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView, @NonNull FloatingActionButton deletePosts,
      @NonNull ConstraintLayout followThisUser, @NonNull RelativeLayout followThisUser1,
      @NonNull FloatingActionButton newPost, @NonNull TextView noPostFound,
      @NonNull RecyclerView rvPosts) {
    this.rootView = rootView;
    this.bottomNavigationView = bottomNavigationView;
    this.deletePosts = deletePosts;
    this.followThisUser = followThisUser;
    this.followThisUser1 = followThisUser1;
    this.newPost = newPost;
    this.noPostFound = noPostFound;
    this.rvPosts = rvPosts;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.deletePosts;
      FloatingActionButton deletePosts = ViewBindings.findChildViewById(rootView, id);
      if (deletePosts == null) {
        break missingId;
      }

      id = R.id.follow_this_user;
      ConstraintLayout followThisUser = ViewBindings.findChildViewById(rootView, id);
      if (followThisUser == null) {
        break missingId;
      }

      id = R.id.follow_this_user;
      RelativeLayout followThisUser1 = ViewBindings.findChildViewById(rootView, id);
      if (followThisUser1 == null) {
        break missingId;
      }

      id = R.id.newPost;
      FloatingActionButton newPost = ViewBindings.findChildViewById(rootView, id);
      if (newPost == null) {
        break missingId;
      }

      id = R.id.no_post_found;
      TextView noPostFound = ViewBindings.findChildViewById(rootView, id);
      if (noPostFound == null) {
        break missingId;
      }

      id = R.id.rv_posts;
      RecyclerView rvPosts = ViewBindings.findChildViewById(rootView, id);
      if (rvPosts == null) {
        break missingId;
      }

      return new ActivityPostBinding((RelativeLayout) rootView, bottomNavigationView, deletePosts,
          followThisUser, followThisUser1, newPost, noPostFound, rvPosts);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
