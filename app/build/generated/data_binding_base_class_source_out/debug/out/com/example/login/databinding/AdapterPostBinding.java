// Generated by view binder compiler. Do not edit!
package com.example.login.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.login.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final TextView postContent;

  @NonNull
  public final TextView postCreator;

  @NonNull
  public final ImageView postImage;

  @NonNull
  public final TextView postTag;

  @NonNull
  public final TextView postTitle;

  @NonNull
  public final ConstraintLayout singlePost;

  private AdapterPostBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull LinearLayout linearLayout2, @NonNull TextView postContent,
      @NonNull TextView postCreator, @NonNull ImageView postImage, @NonNull TextView postTag,
      @NonNull TextView postTitle, @NonNull ConstraintLayout singlePost) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.linearLayout2 = linearLayout2;
    this.postContent = postContent;
    this.postCreator = postCreator;
    this.postImage = postImage;
    this.postTag = postTag;
    this.postTitle = postTitle;
    this.singlePost = singlePost;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.post_content;
      TextView postContent = ViewBindings.findChildViewById(rootView, id);
      if (postContent == null) {
        break missingId;
      }

      id = R.id.post_creator;
      TextView postCreator = ViewBindings.findChildViewById(rootView, id);
      if (postCreator == null) {
        break missingId;
      }

      id = R.id.post_image;
      ImageView postImage = ViewBindings.findChildViewById(rootView, id);
      if (postImage == null) {
        break missingId;
      }

      id = R.id.post_tag;
      TextView postTag = ViewBindings.findChildViewById(rootView, id);
      if (postTag == null) {
        break missingId;
      }

      id = R.id.post_title;
      TextView postTitle = ViewBindings.findChildViewById(rootView, id);
      if (postTitle == null) {
        break missingId;
      }

      ConstraintLayout singlePost = (ConstraintLayout) rootView;

      return new AdapterPostBinding((ConstraintLayout) rootView, cardView, linearLayout2,
          postContent, postCreator, postImage, postTag, postTitle, singlePost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
