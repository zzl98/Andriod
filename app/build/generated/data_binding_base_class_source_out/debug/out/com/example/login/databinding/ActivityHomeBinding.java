// Generated by view binder compiler. Do not edit!
package com.example.login.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.login.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout RelativeLayout;

  @NonNull
  public final TextView ageSomeone;

  @NonNull
  public final TextView ageTextOther;

  @NonNull
  public final ShapeableImageView avatarSomeone;

  @NonNull
  public final ImageView backgroundSomeone;

  @NonNull
  public final TextView blackTextMe;

  @NonNull
  public final ImageView blacklistMe;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayout12;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final ConstraintLayout followersBox;

  @NonNull
  public final TextView followersOther;

  @NonNull
  public final TextView followersSomeoneNum;

  @NonNull
  public final ConstraintLayout followingBox;

  @NonNull
  public final TextView followingOther;

  @NonNull
  public final TextView followingSomeoneNum;

  @NonNull
  public final FloatingActionButton galleryBackground;

  @NonNull
  public final TextView genderSomeone;

  @NonNull
  public final TextView genderTextOther;

  @NonNull
  public final TextView locationSomeone;

  @NonNull
  public final ImageView logoutMe;

  @NonNull
  public final TextView logoutTextMe;

  @NonNull
  public final ImageView messageMe;

  @NonNull
  public final TextView messageTextMe;

  @NonNull
  public final ImageView privacyMe;

  @NonNull
  public final TextView privacyTextMe;

  @NonNull
  public final ImageView reportMe;

  @NonNull
  public final TextView reportTextMe;

  @NonNull
  public final ImageView settingMe;

  @NonNull
  public final TextView settingTextMe;

  @NonNull
  public final TextView signatureSomeone;

  @NonNull
  public final ConstraintLayout someoneLocation;

  private ActivityHomeBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout RelativeLayout, @NonNull TextView ageSomeone,
      @NonNull TextView ageTextOther, @NonNull ShapeableImageView avatarSomeone,
      @NonNull ImageView backgroundSomeone, @NonNull TextView blackTextMe,
      @NonNull ImageView blacklistMe, @NonNull BottomNavigationView bottomNavigationView,
      @NonNull ConstraintLayout constraintLayout, @NonNull ConstraintLayout constraintLayout12,
      @NonNull ConstraintLayout constraintLayout2, @NonNull ConstraintLayout constraintLayout3,
      @NonNull ConstraintLayout followersBox, @NonNull TextView followersOther,
      @NonNull TextView followersSomeoneNum, @NonNull ConstraintLayout followingBox,
      @NonNull TextView followingOther, @NonNull TextView followingSomeoneNum,
      @NonNull FloatingActionButton galleryBackground, @NonNull TextView genderSomeone,
      @NonNull TextView genderTextOther, @NonNull TextView locationSomeone,
      @NonNull ImageView logoutMe, @NonNull TextView logoutTextMe, @NonNull ImageView messageMe,
      @NonNull TextView messageTextMe, @NonNull ImageView privacyMe,
      @NonNull TextView privacyTextMe, @NonNull ImageView reportMe, @NonNull TextView reportTextMe,
      @NonNull ImageView settingMe, @NonNull TextView settingTextMe,
      @NonNull TextView signatureSomeone, @NonNull ConstraintLayout someoneLocation) {
    this.rootView = rootView;
    this.RelativeLayout = RelativeLayout;
    this.ageSomeone = ageSomeone;
    this.ageTextOther = ageTextOther;
    this.avatarSomeone = avatarSomeone;
    this.backgroundSomeone = backgroundSomeone;
    this.blackTextMe = blackTextMe;
    this.blacklistMe = blacklistMe;
    this.bottomNavigationView = bottomNavigationView;
    this.constraintLayout = constraintLayout;
    this.constraintLayout12 = constraintLayout12;
    this.constraintLayout2 = constraintLayout2;
    this.constraintLayout3 = constraintLayout3;
    this.followersBox = followersBox;
    this.followersOther = followersOther;
    this.followersSomeoneNum = followersSomeoneNum;
    this.followingBox = followingBox;
    this.followingOther = followingOther;
    this.followingSomeoneNum = followingSomeoneNum;
    this.galleryBackground = galleryBackground;
    this.genderSomeone = genderSomeone;
    this.genderTextOther = genderTextOther;
    this.locationSomeone = locationSomeone;
    this.logoutMe = logoutMe;
    this.logoutTextMe = logoutTextMe;
    this.messageMe = messageMe;
    this.messageTextMe = messageTextMe;
    this.privacyMe = privacyMe;
    this.privacyTextMe = privacyTextMe;
    this.reportMe = reportMe;
    this.reportTextMe = reportTextMe;
    this.settingMe = settingMe;
    this.settingTextMe = settingTextMe;
    this.signatureSomeone = signatureSomeone;
    this.someoneLocation = someoneLocation;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout RelativeLayout = (RelativeLayout) rootView;

      id = R.id.age_someone;
      TextView ageSomeone = ViewBindings.findChildViewById(rootView, id);
      if (ageSomeone == null) {
        break missingId;
      }

      id = R.id.age_text_other;
      TextView ageTextOther = ViewBindings.findChildViewById(rootView, id);
      if (ageTextOther == null) {
        break missingId;
      }

      id = R.id.avatar_someone;
      ShapeableImageView avatarSomeone = ViewBindings.findChildViewById(rootView, id);
      if (avatarSomeone == null) {
        break missingId;
      }

      id = R.id.background_someone;
      ImageView backgroundSomeone = ViewBindings.findChildViewById(rootView, id);
      if (backgroundSomeone == null) {
        break missingId;
      }

      id = R.id.black_text_me;
      TextView blackTextMe = ViewBindings.findChildViewById(rootView, id);
      if (blackTextMe == null) {
        break missingId;
      }

      id = R.id.blacklist_me;
      ImageView blacklistMe = ViewBindings.findChildViewById(rootView, id);
      if (blacklistMe == null) {
        break missingId;
      }

      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayout12;
      ConstraintLayout constraintLayout12 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout12 == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.followers_box;
      ConstraintLayout followersBox = ViewBindings.findChildViewById(rootView, id);
      if (followersBox == null) {
        break missingId;
      }

      id = R.id.followers_other;
      TextView followersOther = ViewBindings.findChildViewById(rootView, id);
      if (followersOther == null) {
        break missingId;
      }

      id = R.id.followers_someone_num;
      TextView followersSomeoneNum = ViewBindings.findChildViewById(rootView, id);
      if (followersSomeoneNum == null) {
        break missingId;
      }

      id = R.id.following_box;
      ConstraintLayout followingBox = ViewBindings.findChildViewById(rootView, id);
      if (followingBox == null) {
        break missingId;
      }

      id = R.id.following_other;
      TextView followingOther = ViewBindings.findChildViewById(rootView, id);
      if (followingOther == null) {
        break missingId;
      }

      id = R.id.following_someone_num;
      TextView followingSomeoneNum = ViewBindings.findChildViewById(rootView, id);
      if (followingSomeoneNum == null) {
        break missingId;
      }

      id = R.id.gallery_background;
      FloatingActionButton galleryBackground = ViewBindings.findChildViewById(rootView, id);
      if (galleryBackground == null) {
        break missingId;
      }

      id = R.id.gender_someone;
      TextView genderSomeone = ViewBindings.findChildViewById(rootView, id);
      if (genderSomeone == null) {
        break missingId;
      }

      id = R.id.gender_text_other;
      TextView genderTextOther = ViewBindings.findChildViewById(rootView, id);
      if (genderTextOther == null) {
        break missingId;
      }

      id = R.id.location_someone;
      TextView locationSomeone = ViewBindings.findChildViewById(rootView, id);
      if (locationSomeone == null) {
        break missingId;
      }

      id = R.id.logout_me;
      ImageView logoutMe = ViewBindings.findChildViewById(rootView, id);
      if (logoutMe == null) {
        break missingId;
      }

      id = R.id.logout_text_me;
      TextView logoutTextMe = ViewBindings.findChildViewById(rootView, id);
      if (logoutTextMe == null) {
        break missingId;
      }

      id = R.id.message_me;
      ImageView messageMe = ViewBindings.findChildViewById(rootView, id);
      if (messageMe == null) {
        break missingId;
      }

      id = R.id.message_text_me;
      TextView messageTextMe = ViewBindings.findChildViewById(rootView, id);
      if (messageTextMe == null) {
        break missingId;
      }

      id = R.id.privacy_me;
      ImageView privacyMe = ViewBindings.findChildViewById(rootView, id);
      if (privacyMe == null) {
        break missingId;
      }

      id = R.id.privacy_text_me;
      TextView privacyTextMe = ViewBindings.findChildViewById(rootView, id);
      if (privacyTextMe == null) {
        break missingId;
      }

      id = R.id.report_me;
      ImageView reportMe = ViewBindings.findChildViewById(rootView, id);
      if (reportMe == null) {
        break missingId;
      }

      id = R.id.report_text_me;
      TextView reportTextMe = ViewBindings.findChildViewById(rootView, id);
      if (reportTextMe == null) {
        break missingId;
      }

      id = R.id.setting_me;
      ImageView settingMe = ViewBindings.findChildViewById(rootView, id);
      if (settingMe == null) {
        break missingId;
      }

      id = R.id.setting_text_me;
      TextView settingTextMe = ViewBindings.findChildViewById(rootView, id);
      if (settingTextMe == null) {
        break missingId;
      }

      id = R.id.signature_someone;
      TextView signatureSomeone = ViewBindings.findChildViewById(rootView, id);
      if (signatureSomeone == null) {
        break missingId;
      }

      id = R.id.someone_location;
      ConstraintLayout someoneLocation = ViewBindings.findChildViewById(rootView, id);
      if (someoneLocation == null) {
        break missingId;
      }

      return new ActivityHomeBinding((RelativeLayout) rootView, RelativeLayout, ageSomeone,
          ageTextOther, avatarSomeone, backgroundSomeone, blackTextMe, blacklistMe,
          bottomNavigationView, constraintLayout, constraintLayout12, constraintLayout2,
          constraintLayout3, followersBox, followersOther, followersSomeoneNum, followingBox,
          followingOther, followingSomeoneNum, galleryBackground, genderSomeone, genderTextOther,
          locationSomeone, logoutMe, logoutTextMe, messageMe, messageTextMe, privacyMe,
          privacyTextMe, reportMe, reportTextMe, settingMe, settingTextMe, signatureSomeone,
          someoneLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
