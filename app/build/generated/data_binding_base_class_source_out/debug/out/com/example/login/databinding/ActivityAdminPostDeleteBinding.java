// Generated by view binder compiler. Do not edit!
package com.example.login.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.login.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminPostDeleteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button adminDeleteAllPostsButton;

  @NonNull
  public final Button adminPostDeleteButton;

  @NonNull
  public final EditText adminPostidDelete;

  private ActivityAdminPostDeleteBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button adminDeleteAllPostsButton, @NonNull Button adminPostDeleteButton,
      @NonNull EditText adminPostidDelete) {
    this.rootView = rootView;
    this.adminDeleteAllPostsButton = adminDeleteAllPostsButton;
    this.adminPostDeleteButton = adminPostDeleteButton;
    this.adminPostidDelete = adminPostidDelete;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminPostDeleteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminPostDeleteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_post_delete, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminPostDeleteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.admin_delete_all_posts_button;
      Button adminDeleteAllPostsButton = ViewBindings.findChildViewById(rootView, id);
      if (adminDeleteAllPostsButton == null) {
        break missingId;
      }

      id = R.id.admin_post_delete_button;
      Button adminPostDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (adminPostDeleteButton == null) {
        break missingId;
      }

      id = R.id.admin_postid_delete;
      EditText adminPostidDelete = ViewBindings.findChildViewById(rootView, id);
      if (adminPostidDelete == null) {
        break missingId;
      }

      return new ActivityAdminPostDeleteBinding((ConstraintLayout) rootView,
          adminDeleteAllPostsButton, adminPostDeleteButton, adminPostidDelete);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
